name: Build

on:
  push:
    branches: [ v0.2.x ]
  pull_request:
    branches: [ v0.2.x ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - build_name: Windows
            platform: windows-latest

    name: ${{ matrix.build_name }}
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Setup Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: '. -> target'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: Install Node and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Get version information
        id: extract_version
        shell: bash
        run: |
          version=$(pnpm pkg get version | tr -d \")
          commit=$(git rev-parse --short HEAD)
          if git rev-parse --verify "refs/tags/$version" >/dev/null 2>&1; then
            suffix=-
          else
            suffix=-Beta
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "suffix=$suffix" >> $GITHUB_OUTPUT
          echo "commit=$commit" >> $GITHUB_OUTPUT
          echo "combined=$version$suffix-$commit" >> $GITHUB_OUTPUT

      - name: Install app dependencies
        run: pnpm install

      - name: Build Tauri app
        run: pnpm tauri build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: ${{ github.event.repository.name }}-${{ steps.extract_version.outputs.combined }}-${{ matrix.build_name }}
          path: |
            target/release/*.exe
            target/release/bundle/msi/*.msi
